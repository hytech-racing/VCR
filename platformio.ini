; HT09 VCR PlatformIO configuration file
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[common]
lib_deps_shared = 
    https://github.com/hytech-racing/shared_firmware_systems.git
    https://github.com/hytech-racing/shared_firmware_types.git#58f34b97dc9ece4b05f6c142a4f6dc6031366ba1
    Embedded Template Library@^20.39.4
    https://github.com/hytech-racing/HT_SCHED.git#c13cff762c59dd82a8c273e3e98fd1a80622656d

[on_hardware_common]
lib_deps_third_party = 
    nanopb/Nanopb@^0.4.91
    https://github.com/ssilverman/QNEthernet#v0.26.0
    blemasle/MCP23017@^2.0.0
    https://github.com/KSU-MS/pio-git-hash-gen#7998b5b3f8a2464209b0e73338717998bcf511ee

ht_lib_deps =
    https://github.com/hytech-racing/HT_CAN/releases/download/175/can_lib.tar.gz
    https://github.com/hytech-racing/shared_firmware_interfaces.git
    https://github.com/hytech-racing/HT_proto/releases/download/2025-08-27T15_34_50/hytech_msgs_pb_lib.tar.gz
    
[env:teensy41]
check_tool = clangtidy
check_severity = medium, high
check_flags =
    clangtidy: --config-file=./.clang-tidy
check_src_filters = 
    +<**/*.cpp>
    +<**/*.h>
    -<test/**>
    -<src/main_can_test.cpp>
test_framework = googletest
build_unflags = -std=gnu++11
build_flags = 
    -std=c++17
    -D TEENSY_OPT_SMALLEST_CODE
    -I include
build_src_filter = 
    +<**/*.cpp>
    -<main_can_test.cpp>
platform = teensy
board = teensy41
framework = arduino
monitor_speed = 115200
upload_protocol = teensy-cli
test_ignore =
    test_interfaces
    test_systems
lib_deps =
    ${common.lib_deps_shared}
    ${on_hardware_common.lib_deps_third_party}
    ${on_hardware_common.ht_lib_deps}

[env:test_systems_env]
platform = native
test_framework = googletest
build_src_filter = 
    -<VCR_Globals.cpp>
    -<VCR_InterfaceTasks.cpp>
    -<main.cpp>
    +<VCR_Constants.cpp>
    +<../test/test_systems/test_systems.cpp>
build_unflags = -std=gnu++11
build_flags = 
    -std=c++17
    -g
    -D TESTING_SYSTEMS
lib_ignore = 
    interfaces
test_ignore=
    test_interfaces*
lib_deps = 
    ${common.lib_deps_shared}
    google/googletest@^1.15.2

[env:ethernet_testing]
check_tool = clangtidy
check_flags = 
    clangtidy: --config-file=./.clang-tidy
check_severity = medium, high
test_framework = googletest
build_unflags = -std=gnu++11
build_flags = 
    -std=c++17
    -D TEENSY_OPT_SMALLEST_CODE
    -I include

check_src_filters = 
    +<include/*>
    +<lib/*>
    +<src/*>
    -<src/old_main.cpp>
build_src_filter = 
    -<*.cpp>
    +<main_ethernet_test.cpp>
platform = teensy
board = teensy41
framework = arduino
monitor_speed = 115200
upload_protocol = teensy-cli
test_ignore = 
    test_interfaces
    test_systems
lib_deps = 
    ${common.lib_deps_shared}
    ${on_hardware_common.lib_deps_third_party}
    ${on_hardware_common.ht_lib_deps}

[env:test_can]
check_tool = clangtidy
check_severity = medium, high
check_flags =
    clangtidy: --config-file=./.clang-tidy
test_framework = googletest
build_unflags = -std=gnu++11
build_flags = 
    -std=c++17
    -D TEENSY_OPT_SMALLEST_CODE
    -I include

build_src_filter = 
    +<**/*.cpp>
    -<main.cpp>
    ; -<main_can_test.cpp>
platform = teensy
board = teensy41
framework = arduino
monitor_speed = 115200
upload_protocol = teensy-cli
test_ignore =
    test_interfaces
    test_systems
lib_deps =
    ${common.lib_deps_shared}
    ${on_hardware_common.lib_deps_third_party}
    ${on_hardware_common.ht_lib_deps}
 

