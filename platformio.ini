; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[common]
lib_deps_shared = 
	https://github.com/hytech-racing/shared_firmware_systems.git#af96a63
	https://github.com/hytech-racing/shared_firmware_types.git
	https://github.com/ssilverman/QNEthernet#v0.26.0
	https://github.com/hytech-racing/HT_SCHED
	Embedded Template Library@^20.39.4

[env:teensy41]
check_tool = clangtidy
check_flags = 
	clangtidy: --config-file=./.clang-tidy
check_severity = medium, high
test_framework = googletest
build_unflags = -std=gnu++11
build_flags =
  -std=c++17
  -D TEENSY_OPT_SMALLEST_CODE
  ; -D _TASK_MICRO_RES ; TaskScheduler specific compile parameter 


platform = teensy
board = teensy41
framework = arduino
monitor_speed = 115200
upload_protocol = teensy-cli
test_ignore = 
	test_interfaces
	test_systems
lib_deps = 
	${common.lib_deps_shared}
	arkhipenko/TaskScheduler@^3.8.5
	https://github.com/ssilverman/QNEthernet#v0.26.0
	https://github.com/hytech-racing/HT_CAN/releases/download/137/can_lib.tar.gz
	https://github.com/hytech-racing/shared_firmware_interfaces.git
	blemasle/MCP23017@^2.0.0

[env:test_systems_env]
platform = native
test_framework = googletest
build_src_filter = 
	-<VCR_Globals.cpp>
	-<VCR_Tasks.cpp>
	-<main.cpp>
	+<VCR_Constants.cpp>
	+<../test/test_systems/test_systems.cpp>
build_unflags = -std=gnu++11
build_flags = 
	-std=c++17
	-g
	-D TESTING_SYSTEMS
lib_ignore = 
test_ignore = 
	test_interfaces*
lib_deps = 
	google/googletest@^1.15.2
	${common.lib_deps_shared}
	blemasle/MCP23017@^2.0.0
